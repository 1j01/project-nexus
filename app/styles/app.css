
html, body {
	font-family: sans-serif;
	height: 100%;
}

html,
body,
.app,
.window-frame,
.window-content,
header,
header *,
main,
main * {
	display: flex;
	flex: 1;
	flex-direction: column;
	padding: 0;
	margin: 0;
}

.window-frame * {
	outline: none;
}

main {
	flex-direction: row;
}

header {
	padding: 5px;
}
header,
li {
	flex: 0;
	flex-basis: auto;
	flex-shrink: 0;
	flex-direction: row;
}
li {
	padding: 2px 5px;
	list-style: none;
}
li > * {
	padding: 7px;
	height: 100%;
	line-height: 1;
}
.launcher {
	flex: 0;
	flex-basis: auto;
}
button {
	flex: 0;
	flex-basis: auto;
}
header button,
h2 button,
li button {
	background: none;
	color: inherit;
	border: 0;
}
li > button,
.launcher,
.launcher > button {
	padding: 0;
	width: 32px;
	height: 32px;
	font-size: 32px;
	align-items: center;
}
.launcher {
	position: relative;
}
.launcher.menu-open {
	color: black;
	background: rgb(229, 248, 255);
	box-shadow: 1px 1px 1px rgba(24, 115, 115, 0.55);
}
.launcher.menu-open > button {
	outline: none;
}
.launcher.has-menu::after {
	content: "â€¦";
	pointer-events: none;
	font-size: 0.6em;
	position: absolute;
	right: 0;
	bottom: 0;
}
.launcher-context-menu {
	position: fixed;
	z-index: 1;
	font-size: medium;
	color: black;
	background: rgb(229, 248, 255);
	box-shadow: 1px 1px 1px rgba(24, 115, 115, 0.55);
}
.launcher-context-menu:not(.open) {
	display: none;
}
.launcher-context-menu li {
	padding: 2px;
}
button > span {
	line-height: 1;
}
button > i {
	pointer-events: none;
}
[class^="icon-"] {
	-webkit-transform: scale(0.75);
}
header .octicon-gear:before {
	vertical-align: middle;
}


button.no-primary-action,
[disabled] {
	opacity: 0.2;
}
ul {
	overflow: auto;
}
.project-details {
	overflow: hidden;
}
.projects,
.no-projects {
	flex-basis: auto;
	flex-shrink: 10;
	flex-grow: 0.1;
}
.no-projects {
	padding: 15px;
	text-align: center;
}
.error {
	color: red;
}
.subtle-error {
	font-family: monospace;
	color: #aaa;
}

li.hover {
	background: rgba(25, 121, 202, 0.1);
}
li.active {
	background: rgba(25, 121, 202, 0.3);
}
li.selected {
	background: #328EFE;
	color: white;
}

header {
	background: #E53C36;
	color: white;
}

main {
	background: white;
	color: black;
}

.details {
	background: #FDECEB;
	padding: 5px;
}

.package-editor {
	display: block;
}
.package-editor .field {
	padding: 10px;
}
.package-editor .field-name {
	padding-bottom: 2px;
	color: #555;
}
.package-editor input {
	padding: 3px;
}

* {
	-webkit-user-select: none;
	cursor: default;
}
input,
textarea,
[contenteditable],
p, p > span,
code, code > span,
pre, pre > span,
.terminal, .terminal > div {
	-webkit-user-select: text;
	cursor: text;
}
pre {
	background: white;
	color: black;
	tab-size: 2;
	overflow: auto;
}
.terminal,
.terminal > div {
	display: block;
	overflow: hidden;
}
.terminal {
	font-family: monospace;
	line-height: 1;
}
.terminal-container,
.process,
.processes {
	flex: 1;
	transition: flex .4s ease;
	background: black;
}
.terminal-container:empty,
.process:empty,
.processes:empty {
	flex: 0.00000001;
}
.process header > * {
	padding: 0 5px;
}
.window-frame button.close-process { /* for elementary styles */
	order: -1;
}
.process-exited {
	flex: 0 0 auto;
}

.window-content {
	position: relative;
}
.settings-container,
.overlay {
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}
.overlay {
	background: rgba(0, 0, 0, 0.3);
}
.settings {
	position: absolute;
	left: 15%;
	right: 15%;
	top: 15%;
	bottom: 15%;
	padding: 15px;
	background: white;
	box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3), 0 0 50px rgba(0, 0, 0, 0.3);
	border-radius: 2px;
	display: flex;
	flex-direction: column;
}
.settings h2 {
	margin-top: 0;
}
.settings-content {
	overflow: auto;
}
.settings-container,
.settings,
.overlay {
	transition: all 0.5s ease;
}
.settings-container:not(.visible) {
	pointer-events: none;
	opacity: 0;
}
.settings-container {
	perspective: 5000px;
	overflow: hidden;
}
.settings-container:not(.visible) .settings {
	/*-webkit-transform: scale(0.9) rotateY(-50deg) translate(350px, -100px);*/
	/*-webkit-transform: translate(350px, -200px) scale(0.4) rotateY(-50deg);*/
	/*-webkit-transform: scale(0.9) rotateZ(-5deg) rotateX(-50deg) rotateY(-50deg);*/
	/*-webkit-transform: scale(0.9) rotateX(200deg);*/
	-webkit-transform: scale(1.5) rotateY(0.5turn);
	/*-webkit-transform: scale(1.5) rotateX(1turn);*/
	/*-webkit-transform: scale(0.9) rotateX(30deg);*/
}
.setting {
	display: flex;
	align-items: center;
	padding: 10px;
}
.setting * {
	padding: 5px;
}
.setting input:not([type]),
.setting input[type=text] {
	flex: 1;
}

/* elementary.css defines .linked styles, but we want it to be linked without elementary styles as well */
.non-elementary .linked > input:not(:last-child),
.non-elementary .linked > button:not(:last-child) {
	border: 1px solid rgb(165, 165, 165);
	border-right: none;
	border-top-left-radius: 2px;
	border-bottom-left-radius: 2px;
}
